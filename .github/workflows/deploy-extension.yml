name: Deploy Chrome Extension + Backend

on:
  push:
    branches:
      - swetha

env:
  EXTENSION_PATH: extension
  INJECT_FILE: extension/sidepanel.js
  ZIP_OUTPUT: chrome-extension.zip

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies and Package Lambda Functions
      run: |
        cd backend
        pip install -r requirements.txt
        bash package.sh
        bash package_auth.sh
        bash package_rekognition.sh
        bash package_transcribe.sh
        cd ..

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
      

    - name: Terraform Init & Apply
      working-directory: infrastructure
      run: |
        terraform init
        terraform apply -auto-approve

    - name: Get Terraform Outputs
      id: tf_outputs
      working-directory: infrastructure
      run: |
        echo "api_url=$(terraform output -raw api_endpoint)" >> $GITHUB_OUTPUT
        echo "client_id=$(terraform output -raw cognito_user_pool_client_id)" >> $GITHUB_OUTPUT

    - name: Inject Terraform Outputs into sidepanel.js
      run: |
        sed -i "s|const API_ENDPOINT = .*;|const API_ENDPOINT = '${{ steps.tf_outputs.outputs.api_url }}';|" ${{ env.INJECT_FILE }}
        sed -i "s|const COGNITO_CLIENT_ID = .*;|const COGNITO_CLIENT_ID = '${{ steps.tf_outputs.outputs.client_id }}';|" ${{ env.INJECT_FILE }}

    - name: Zip Chrome Extension
      run: |
        cd ${{ env.EXTENSION_PATH }}
        zip -r ../${{ env.ZIP_OUTPUT }} . -x ".git" "*.DS_Store"
        cd ..

    - name: Upload to Chrome Web Store
      uses: trmcnvn/chrome-webstore-upload-action@main
      with:
        client_id: ${{ secrets.CHROME_CLIENT_ID }}
        client_secret: ${{ secrets.CHROME_CLIENT_SECRET }}
        refresh_token: ${{ secrets.CHROME_REFRESH_TOKEN }}
        extension_id: ${{ secrets.CHROME_EXTENSION_ID }}
        zip_file: ${{ env.ZIP_OUTPUT }}