name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      user:
        description: "Team member identifier (Choose one: hemanth, swetha, sanjeev, sandeep, nithikesh)"
        required: true

jobs:
  apply:
    runs-on: ubuntu-latest

    env:
      USER: ${{ github.event.inputs.user }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS credentials (hemanth)
      if: env.USER == 'hemanth'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_HEMANTH }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_HEMANTH }}
        aws-region: us-east-1

    - name: Configure AWS credentials (swetha)
      if: env.USER == 'swetha'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_SWETHA }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_SWETHA }}
        aws-region: us-east-1

    - name: Configure AWS credentials (sanjeev)
      if: env.USER == 'sanjeev'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_SANJEEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_SANJEEV }}
        aws-region: us-east-1

    - name: Configure AWS credentials (sandeep)
      if: env.USER == 'sandeep'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_SANDEEP }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_SANDEEP }}
        aws-region: us-east-1

    - name: Configure AWS credentials (nithikesh)
      if: env.USER == 'nithikesh'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_NITHIKESH }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_NITHIKESH }}
        aws-region: us-east-1
      
    - name: Install zip and pip dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip
        pip install -r backend/requirements.txt
    
    - name: Package Lambda - summarize/history
      working-directory: backend
      run: bash package.sh

    - name: Package Lambda - auth
      working-directory: backend
      run: bash package_auth.sh

    - name: Package Lambda - rekognition
      working-directory: backend
      run: bash package_rekognition.sh

    - name: Package Lambda - transcribe
      working-directory: backend
      run: bash package_transcribe.sh

    - name: Terraform Init and Apply
      working-directory: infrastructure
      run: |
        terraform init -backend-config="bucket=tf-state-${{ env.USER }}" \
                        -backend-config="key=${{ env.USER }}/terraform.tfstate" \
                        -backend-config="region=us-east-1"
        terraform apply -auto-approve